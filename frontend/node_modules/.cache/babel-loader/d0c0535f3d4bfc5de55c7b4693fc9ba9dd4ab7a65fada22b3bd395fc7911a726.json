{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/catur-indonesia/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import io from'socket.io-client';import ChessBoard from'./components/ChessBoard';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'https://catur-backend-1.vercel.app/';const socket=io(API_URL);function App(){const[user,setUser]=useState(null);const[currentPage,setCurrentPage]=useState('login');const[loginData,setLoginData]=useState({username:'',password:''});const[registerData,setRegisterData]=useState({username:'',email:'',password:'',role:'user'});const[gameState,setGameState]=useState(null);const[friends,setFriends]=useState([]);const[allUsers,setAllUsers]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[leaderboard,setLeaderboard]=useState([]);const[profile,setProfile]=useState({username:'',email:'',points:0});const[currentPlayer,setCurrentPlayer]=useState('white');const[isPlayerTurn,setIsPlayerTurn]=useState(true);const[gameRequests,setGameRequests]=useState([]);const[gameResult,setGameResult]=useState(null);useEffect(()=>{const token=localStorage.getItem('token');if(token){fetchUserProfile();}// Socket listeners\nsocket.on('gameRequest',request=>{setGameRequests(prev=>[...prev,request]);});socket.on('gameStarted',game=>{setGameState(game);setCurrentPage('game');setCurrentPlayer('white');setIsPlayerTurn(game.playerColor==='white');setGameResult(null);});socket.on('moveMade',moveData=>{setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{board:moveData.board,currentPlayer:moveData.currentPlayer}));setCurrentPlayer(moveData.currentPlayer);setIsPlayerTurn(moveData.currentPlayer===(gameState===null||gameState===void 0?void 0:gameState.playerColor));});return()=>{socket.off('gameRequest');socket.off('gameStarted');socket.off('moveMade');};},[gameState===null||gameState===void 0?void 0:gameState.playerColor]);const fetchUserProfile=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get(\"\".concat(API_URL,\"/api/profile\"),{headers:{Authorization:\"Bearer \".concat(token)}});setUser(response.data);setProfile(response.data);setCurrentPage('dashboard');}catch(error){console.error('Error fetching profile:',error);}};const handleLogin=async e=>{e.preventDefault();try{const response=await axios.post(\"\".concat(API_URL,\"/api/login\"),loginData);localStorage.setItem('token',response.data.token);setUser(response.data.user);socket.emit('userConnected',response.data.user.id);setCurrentPage('dashboard');}catch(error){alert('Login gagal: '+error.response.data.message);}};const handleRegister=async e=>{e.preventDefault();try{await axios.post(\"\".concat(API_URL,\"/api/register\"),registerData);alert('Registrasi berhasil! Silakan login.');setCurrentPage('login');}catch(error){alert('Registrasi gagal: '+error.response.data.message);}};// Fungsi untuk mengecek skakmat\nconst isCheckmate=(board,playerColor)=>{const kingPiece=playerColor==='white'?'♔':'♚';let kingPosition=null;// Cari posisi raja\nfor(let row=0;row<8;row++){for(let col=0;col<8;col++){if(board[row][col]===kingPiece){kingPosition=[row,col];break;}}if(kingPosition)break;}if(!kingPosition)return true;// Raja sudah tidak ada\n// Cek apakah raja dalam skak\nconst isInCheck=isKingInCheck(board,kingPosition,playerColor);if(!isInCheck)return false;// Bukan skakmat jika raja tidak dalam skak\n// Cek apakah ada gerakan yang bisa menyelamatkan raja\nconst pieces=playerColor==='white'?['♙','♖','♘','♗','♕','♔']:['♟','♜','♞','♝','♛','♚'];for(let row=0;row<8;row++){for(let col=0;col<8;col++){const piece=board[row][col];if(pieces.includes(piece)){const possibleMoves=getPossibleMovesForPiece(board,row,col,piece);for(const move of possibleMoves){// Simulasikan gerakan\nconst newBoard=board.map(r=>[...r]);newBoard[move[0]][move[1]]=newBoard[row][col];newBoard[row][col]=null;// Cari posisi raja setelah gerakan\nlet newKingPosition=kingPosition;if(piece===kingPiece){newKingPosition=move;}// Cek apakah raja masih dalam skak setelah gerakan\nif(!isKingInCheck(newBoard,newKingPosition,playerColor)){return false;// Ada gerakan yang bisa menyelamatkan\n}}}}}return true;// Skakmat\n};// Fungsi untuk mengecek apakah raja dalam skak\nconst isKingInCheck=(board,kingPosition,playerColor)=>{const opponentColor=playerColor==='white'?'black':'white';const opponentPieces=opponentColor==='white'?['♙','♖','♘','♗','♕','♔']:['♟','♜','♞','♝','♛','♚'];for(let row=0;row<8;row++){for(let col=0;col<8;col++){const piece=board[row][col];if(opponentPieces.includes(piece)){if(isValidMoveForBot(board,row,col,kingPosition[0],kingPosition[1],piece)){return true;}}}}return false;};// Bot AI logic (diperbaiki)\nconst makeBotMove=(board,currentPlayerColor)=>{const botColor=currentPlayerColor==='white'?'white':'black';const possibleMoves=getAllPossibleMoves(board,botColor);if(possibleMoves.length===0)return null;// AI sederhana: prioritaskan memakan buah lawan\nconst captureMoves=possibleMoves.filter(move=>board[move.to[0]][move.to[1]]!==null);const selectedMoves=captureMoves.length>0?captureMoves:possibleMoves;const randomMove=selectedMoves[Math.floor(Math.random()*selectedMoves.length)];return randomMove;};const getAllPossibleMoves=(board,color)=>{const moves=[];const pieces=color==='white'?['♙','♖','♘','♗','♕','♔']:['♟','♜','♞','♝','♛','♚'];for(let row=0;row<8;row++){for(let col=0;col<8;col++){const piece=board[row][col];if(pieces.includes(piece)){const pieceMoves=getPossibleMovesForPiece(board,row,col,piece);moves.push(...pieceMoves.map(move=>({from:[row,col],to:move,piece})));}}}return moves;};const getPossibleMovesForPiece=(board,row,col,piece)=>{const moves=[];for(let r=0;r<8;r++){for(let c=0;c<8;c++){if(isValidMoveForBot(board,row,col,r,c,piece)){moves.push([r,c]);}}}return moves;};const getPieceColor=piece=>{const whitePieces=['♙','♖','♘','♗','♕','♔'];const blackPieces=['♟','♜','♞','♝','♛','♚'];if(whitePieces.includes(piece))return'white';if(blackPieces.includes(piece))return'black';return null;};const isValidMoveForBot=(board,fromRow,fromCol,toRow,toCol,piece)=>{// Pastikan tidak keluar dari papan\nif(toRow<0||toRow>7||toCol<0||toCol>7)return false;// Tidak bisa memakan buah sendiri\nconst targetPiece=board[toRow][toCol];if(targetPiece&&getPieceColor(piece)===getPieceColor(targetPiece)){return false;}const rowDiff=Math.abs(toRow-fromRow);const colDiff=Math.abs(toCol-fromCol);switch(piece){case'♙':// Pion putih\nif(fromRow===6&&toRow===4&&fromCol===toCol&&!board[5][toCol]&&!board[4][toCol])return true;if(toRow===fromRow-1&&fromCol===toCol&&!targetPiece)return true;if(toRow===fromRow-1&&Math.abs(toCol-fromCol)===1&&targetPiece)return true;return false;case'♟':// Pion hitam\nif(fromRow===1&&toRow===3&&fromCol===toCol&&!board[2][toCol]&&!board[3][toCol])return true;if(toRow===fromRow+1&&fromCol===toCol&&!targetPiece)return true;if(toRow===fromRow+1&&Math.abs(toCol-fromCol)===1&&targetPiece)return true;return false;case'♖':case'♜':// Benteng\nif(fromRow!==toRow&&fromCol!==toCol)return false;return isPathClearForBot(board,fromRow,fromCol,toRow,toCol);case'♗':case'♝':// Gajah\nif(rowDiff!==colDiff)return false;return isPathClearForBot(board,fromRow,fromCol,toRow,toCol);case'♘':case'♞':// Kuda\nreturn rowDiff===2&&colDiff===1||rowDiff===1&&colDiff===2;case'♕':case'♛':// Ratu\nif(fromRow!==toRow&&fromCol!==toCol&&rowDiff!==colDiff)return false;return isPathClearForBot(board,fromRow,fromCol,toRow,toCol);case'♔':case'♚':// Raja\nreturn rowDiff<=1&&colDiff<=1;default:return false;}};const isPathClearForBot=(board,fromRow,fromCol,toRow,toCol)=>{const rowDirection=toRow>fromRow?1:toRow<fromRow?-1:0;const colDirection=toCol>fromCol?1:toCol<fromCol?-1:0;let currentRow=fromRow+rowDirection;let currentCol=fromCol+colDirection;while(currentRow!==toRow||currentCol!==toCol){if(board[currentRow][currentCol]!==null)return false;currentRow+=rowDirection;currentCol+=colDirection;}return true;};// Fungsi untuk update poin dan leaderboard (DIPERBAIKI)\nconst updatePlayerPoints=async(isWin,gameType)=>{try{const token=localStorage.getItem('token');let pointsEarned=0;if(isWin){pointsEarned=gameType==='bot'?50:100;}const response=await axios.put(\"\".concat(API_URL,\"/api/user/points\"),{points:pointsEarned,gameType:gameType,isWin:isWin},{headers:{Authorization:\"Bearer \".concat(token)}});// Update state user dengan data terbaru dari server\nsetUser(response.data.user);setProfile(response.data.user);console.log('Poin berhasil diupdate:',response.data.user);// Refresh leaderboard setelah update poin\nawait fetchLeaderboard();}catch(error){console.error('Error updating points:',error);// Fallback: update lokal jika API gagal\nconst pointsEarned=isWin?gameType==='bot'?50:100:0;const updatedUser=_objectSpread(_objectSpread({},user),{},{points:(user.points||0)+pointsEarned,games_played:(user.games_played||0)+1,wins:isWin?(user.wins||0)+1:user.wins||0});setUser(updatedUser);setProfile(updatedUser);}};const handleMove=async moveData=>{const newGameState=_objectSpread(_objectSpread({},gameState),{},{board:moveData.board,currentPlayer:currentPlayer==='white'?'black':'white'});setGameState(newGameState);// Cek skakmat setelah gerakan\nconst nextPlayer=newGameState.currentPlayer;const isGameOver=isCheckmate(moveData.board,nextPlayer);if(isGameOver){const winner=currentPlayer;const isPlayerWin=winner===gameState.playerColor;setGameResult({winner,isPlayerWin,message:isPlayerWin?'Selamat! Anda menang!':'Anda kalah!'});// Update poin setelah game selesai\nawait updatePlayerPoints(isPlayerWin,gameState.gameType);// Simpan hasil game ke database jika bukan vs bot\nif(gameState.gameType!=='bot'){try{const token=localStorage.getItem('token');await axios.post(\"\".concat(API_URL,\"/api/game/finish\"),{gameId:gameState.id,winnerId:isPlayerWin?user.id:null,gameType:gameState.gameType},{headers:{Authorization:\"Bearer \".concat(token)}});}catch(error){console.error('Error finishing game:',error);}}return;}setCurrentPlayer(newGameState.currentPlayer);// Jika vs bot dan bukan giliran pemain\nif(gameState.gameType==='bot'&&newGameState.currentPlayer!==gameState.playerColor){setIsPlayerTurn(false);// Bot bergerak setelah delay\nsetTimeout(async()=>{const botMove=makeBotMove(moveData.board,newGameState.currentPlayer);if(botMove){const botBoard=[...moveData.board];botBoard[botMove.to[0]][botMove.to[1]]=botBoard[botMove.from[0]][botMove.from[1]];botBoard[botMove.from[0]][botMove.from[1]]=null;// Cek skakmat setelah gerakan bot\nconst isBotGameOver=isCheckmate(botBoard,gameState.playerColor);if(isBotGameOver){setGameResult({winner:newGameState.currentPlayer,isPlayerWin:false,message:'Bot menang! Coba lagi!'});setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{board:botBoard}));// Update poin untuk kekalahan\nawait updatePlayerPoints(false,gameState.gameType);return;}setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{board:botBoard,currentPlayer:gameState.playerColor}));setCurrentPlayer(gameState.playerColor);setIsPlayerTurn(true);}},1000);}else if(gameState.gameType!=='bot'){// Kirim gerakan ke socket untuk multiplayer\nsocket.emit('makeMove',{gameId:gameState.id,move:moveData});}else{setIsPlayerTurn(true);}};const startGame=async gameType=>{if(gameType==='bot'){// Langsung mulai game vs bot\nconst newGameState={id:Date.now(),gameType:'bot',playerColor:'white',board:[['♜','♞','♝','♛','♚','♝','♞','♜'],['♟','♟','♟','♟','♟','♟','♟','♟'],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],['♙','♙','♙','♙','♙','♙','♙','♙'],['♖','♘','♗','♕','♔','♗','♘','♖']]};setGameState(newGameState);setCurrentPlayer('white');setIsPlayerTurn(true);setGameResult(null);setCurrentPage('game');}else{// Untuk random dan friend, kirim request\ntry{const token=localStorage.getItem('token');socket.emit('findGame',{gameType,userId:user.id,token});alert(\"Mencari \".concat(gameType==='random'?'lawan random':'teman',\"...\"));}catch(error){alert('Gagal memulai permainan: '+error.message);}}};const sendGameRequest=friendId=>{socket.emit('gameRequest',{from:user.id,to:friendId,fromUsername:user.username});alert('Permintaan permainan dikirim!');};const acceptGameRequest=requestId=>{socket.emit('acceptGameRequest',requestId);setGameRequests(prev=>prev.filter(req=>req.id!==requestId));};const rejectGameRequest=requestId=>{socket.emit('rejectGameRequest',requestId);setGameRequests(prev=>prev.filter(req=>req.id!==requestId));};const fetchFriends=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get(\"\".concat(API_URL,\"/api/friends\"),{headers:{Authorization:\"Bearer \".concat(token)}});setFriends(response.data);}catch(error){console.error('Error fetching friends:',error);// Fallback: tampilkan data dummy jika API tidak tersedia\nsetFriends([{id:1,username:'player1',points:1500},{id:2,username:'player2',points:1200},{id:3,username:'player3',points:1800}]);}};const searchUsers=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get(\"\".concat(API_URL,\"/api/users/search?q=\").concat(searchTerm),{headers:{Authorization:\"Bearer \".concat(token)}});setAllUsers(response.data);}catch(error){console.error('Error searching users:',error);// Fallback: tampilkan data dummy\nconst dummyUsers=[{id:4,username:'chessmaster',points:2000},{id:5,username:'rookie123',points:800},{id:6,username:'grandmaster',points:2500}].filter(user=>user.username.toLowerCase().includes(searchTerm.toLowerCase()));setAllUsers(dummyUsers);}};const addFriend=async userId=>{try{const token=localStorage.getItem('token');await axios.post(\"\".concat(API_URL,\"/api/friends/add\"),{friendId:userId},{headers:{Authorization:\"Bearer \".concat(token)}});alert('Teman berhasil ditambahkan!');fetchFriends();}catch(error){var _error$response,_error$response$data;alert('Gagal menambahkan teman: '+((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message);}};const fetchLeaderboard=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/api/leaderboard\"));setLeaderboard(response.data);console.log('Leaderboard updated:',response.data);}catch(error){console.error('Error fetching leaderboard:',error);// Fallback data dengan user terkini\nconst fallbackData=[{id:1,username:'grandmaster',points:2500},{id:2,username:'chessking',points:2200},{id:3,username:'strategymaster',points:2000},{id:4,username:'player1',points:1800},{id:5,username:'rookie123',points:1500}];// Tambahkan user saat ini jika belum ada\nif(user&&!fallbackData.find(p=>p.username===user.username)){fallbackData.push({id:user.id,username:user.username,points:user.points||0,games_played:user.games_played||0,wins:user.wins||0});}// Sort berdasarkan poin\nfallbackData.sort((a,b)=>b.points-a.points);setLeaderboard(fallbackData);}};const updateProfile=async updatedProfile=>{try{const token=localStorage.getItem('token');const response=await axios.put(\"\".concat(API_URL,\"/api/profile\"),updatedProfile,{headers:{Authorization:\"Bearer \".concat(token)}});setProfile(response.data.user);setUser(response.data.user);alert('Profil berhasil diperbarui!');}catch(error){var _error$response2,_error$response2$data;alert('Gagal memperbarui profil: '+((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message);}};const logout=()=>{localStorage.removeItem('token');socket.emit('userDisconnected',user===null||user===void 0?void 0:user.id);setUser(null);setCurrentPage('login');};const renderLogin=()=>/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDDEE\\uD83C\\uDDE9 Catur Indonesia - Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:loginData.username,onChange:e=>setLoginData(_objectSpread(_objectSpread({},loginData),{},{username:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:loginData.password,onChange:e=>setLoginData(_objectSpread(_objectSpread({},loginData),{},{password:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Belum punya akun? \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('register'),children:\"Daftar\"})]})]})});const renderRegister=()=>/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDDEE\\uD83C\\uDDE9 Catur Indonesia - Daftar\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:registerData.username,onChange:e=>setRegisterData(_objectSpread(_objectSpread({},registerData),{},{username:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:registerData.email,onChange:e=>setRegisterData(_objectSpread(_objectSpread({},registerData),{},{email:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:registerData.password,onChange:e=>setRegisterData(_objectSpread(_objectSpread({},registerData),{},{password:e.target.value})),required:true}),/*#__PURE__*/_jsxs(\"select\",{value:registerData.role,onChange:e=>setRegisterData(_objectSpread(_objectSpread({},registerData),{},{role:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"user\",children:\"User\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Daftar\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sudah punya akun? \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('login'),children:\"Login\"})]})]})});const renderNavigation=()=>/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"nav-brand\",children:\"\\uD83C\\uDDEE\\uD83C\\uDDE9 Catur Indonesia\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"nav-links\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('dashboard'),children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('play'),children:\"Main\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentPage('friends');fetchFriends();},children:\"Teman\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('tutorial'),children:\"Tutorial\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('profile'),children:\"Profil\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentPage('leaderboard');fetchLeaderboard();},children:\"Papan Skor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:logout,children:\"Keluar\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[\"Halo, \",user===null||user===void 0?void 0:user.username,\"! (Poin: \",(user===null||user===void 0?void 0:user.points)||0,\")\",gameRequests.length>0&&/*#__PURE__*/_jsx(\"span\",{className:\"notification-badge\",children:gameRequests.length})]})]});const renderGameRequests=()=>{if(gameRequests.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"game-requests\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Permintaan Permainan\"}),gameRequests.map(request=>/*#__PURE__*/_jsxs(\"div\",{className:\"game-request\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[request.fromUsername,\" mengundang Anda bermain catur\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>acceptGameRequest(request.id),children:\"Terima\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>rejectGameRequest(request.id),children:\"Tolak\"})]},request.id))]});};const renderDashboard=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Selamat Datang di Catur Indonesia! \\uD83C\\uDDEE\\uD83C\\uDDE9\"}),renderGameRequests(),/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Halo, \",user===null||user===void 0?void 0:user.username,\"!\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Selamat datang di platform catur terbesar Indonesia. Mari mulai permainan yang menantang!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Poin Anda\"}),/*#__PURE__*/_jsx(\"p\",{children:(user===null||user===void 0?void 0:user.points)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Permainan Dimainkan\"}),/*#__PURE__*/_jsx(\"p\",{children:(user===null||user===void 0?void 0:user.games_played)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Kemenangan\"}),/*#__PURE__*/_jsx(\"p\",{children:(user===null||user===void 0?void 0:user.wins)||0})]})]})]})]});const renderPlay=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"play-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pilih Mode Permainan\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-modes\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-mode-card\",onClick:()=>startGame('random'),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFB2 Lawan Random\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bermain melawan pemain acak\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-mode-card\",onClick:()=>startGame('bot'),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDD16 Lawan Bot\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Berlatih melawan komputer\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-mode-card\",onClick:()=>startGame('friend'),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDC65 Undang Teman\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bermain dengan teman\"})]})]})]});const renderGame=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Permainan Catur\"}),gameResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-result \".concat(gameResult.isPlayerWin?'win':'lose'),children:[/*#__PURE__*/_jsx(\"h3\",{children:gameResult.message}),gameResult.isPlayerWin&&/*#__PURE__*/_jsxs(\"p\",{children:[\"+\",gameState.gameType==='bot'?50:100,\" poin!\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('dashboard'),children:\"Kembali ke Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startGame(gameState.gameType),children:\"Main Lagi\"})]}),/*#__PURE__*/_jsx(ChessBoard,{gameState:gameState,onMove:handleMove,currentPlayer:currentPlayer,isPlayerTurn:isPlayerTurn,gameResult:gameResult}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage('dashboard'),children:\"Kembali ke Dashboard\"})]});const renderFriends=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"friends-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Daftar Teman\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Cari Pengguna Baru\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Masukkan username...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:searchUsers,children:\"Cari\"})]}),allUsers.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"search-results\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Hasil Pencarian:\"}),allUsers.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"user-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:user.username}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Poin: \",user.points]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addFriend(user.id),children:\"Tambah Teman\"})]},user.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"friends-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Teman Anda\"}),friends.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Anda belum memiliki teman. Cari dan tambahkan teman baru!\"}):friends.map(friend=>/*#__PURE__*/_jsxs(\"div\",{className:\"friend-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:friend.username}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Poin: \",friend.points]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendGameRequest(friend.id),children:\"Undang Main\"})]},friend.id))]})]});const renderTutorial=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tutorial-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tutorial Catur Indonesia\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tutorial-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cara Bermain Catur\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Catur adalah permainan strategi untuk dua pemain yang dimainkan di atas papan berpetak 8x8.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Peraturan Dasar:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Setiap pemain memulai dengan 16 buah catur\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tujuan: mengalahkan raja lawan (skakmat)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Pemain dengan buah putih bergerak terlebih dahulu\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Setiap buah memiliki cara bergerak yang berbeda\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Gerakan Buah Catur:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Raja (\\u2654/\\u265A):\"}),\" Bergerak satu kotak ke segala arah\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Ratu (\\u2655/\\u265B):\"}),\" Bergerak bebas horizontal, vertikal, dan diagonal\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Benteng (\\u2656/\\u265C):\"}),\" Bergerak horizontal dan vertikal\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gajah (\\u2657/\\u265D):\"}),\" Bergerak diagonal\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Kuda (\\u2658/\\u265E):\"}),\" Bergerak berbentuk L\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pion (\\u2659/\\u265F):\"}),\" Bergerak maju satu kotak, memakan diagonal\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Gerakan Khusus:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rokade:\"}),\" Gerakan khusus raja dan benteng\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"En Passant:\"}),\" Cara khusus pion memakan pion lawan\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Promosi Pion:\"}),\" Pion yang mencapai ujung papan dapat dipromosikan\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Sistem Poin:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Menang vs Bot: +50 poin\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Menang vs Pemain: +100 poin\"})]})]})]});const renderProfile=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Profil Pengguna\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:profile.username,onChange:e=>setProfile(_objectSpread(_objectSpread({},profile),{},{username:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:profile.email,onChange:e=>setProfile(_objectSpread(_objectSpread({},profile),{},{email:e.target.value}))}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Poin: \",profile.points]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Permainan Dimainkan: \",profile.games_played||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Kemenangan: \",profile.wins||0]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateProfile(profile),children:\"Perbarui Profil\"})]})]});const renderLeaderboard=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Papan Skor\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchLeaderboard,style:{marginBottom:'20px'},children:\"\\uD83D\\uDD04 Refresh Leaderboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"leaderboard-list\",children:leaderboard.map((player,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-item \".concat(player.username===(user===null||user===void 0?void 0:user.username)?'current-user':''),children:[/*#__PURE__*/_jsxs(\"span\",{className:\"rank\",children:[\"#\",index+1]}),/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:player.username}),/*#__PURE__*/_jsxs(\"span\",{className:\"points\",children:[player.points,\" poin\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stats\",children:[\"(\",player.games_played||0,\" games, \",player.wins||0,\" wins)\"]})]},player.id))})]});if(!user){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[currentPage==='login'&&renderLogin(),currentPage==='register'&&renderRegister()]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[renderNavigation(),/*#__PURE__*/_jsxs(\"main\",{className:\"main-content\",children:[currentPage==='dashboard'&&renderDashboard(),currentPage==='play'&&renderPlay(),currentPage==='game'&&renderGame(),currentPage==='friends'&&renderFriends(),currentPage==='tutorial'&&renderTutorial(),currentPage==='profile'&&renderProfile(),currentPage==='leaderboard'&&renderLeaderboard()]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","io","ChessBoard","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","socket","App","user","setUser","currentPage","setCurrentPage","loginData","setLoginData","username","password","registerData","setRegisterData","email","role","gameState","setGameState","friends","setFriends","allUsers","setAllUsers","searchTerm","setSearchTerm","leaderboard","setLeaderboard","profile","setProfile","points","currentPlayer","setCurrentPlayer","isPlayerTurn","setIsPlayerTurn","gameRequests","setGameRequests","gameResult","setGameResult","token","localStorage","getItem","fetchUserProfile","on","request","prev","game","playerColor","moveData","_objectSpread","board","off","response","get","concat","headers","Authorization","data","error","console","handleLogin","e","preventDefault","post","setItem","emit","id","alert","message","handleRegister","isCheckmate","kingPiece","kingPosition","row","col","isInCheck","isKingInCheck","pieces","piece","includes","possibleMoves","getPossibleMovesForPiece","move","newBoard","map","r","newKingPosition","opponentColor","opponentPieces","isValidMoveForBot","makeBotMove","currentPlayerColor","botColor","getAllPossibleMoves","length","captureMoves","filter","to","selectedMoves","randomMove","Math","floor","random","color","moves","pieceMoves","push","from","c","getPieceColor","whitePieces","blackPieces","fromRow","fromCol","toRow","toCol","targetPiece","rowDiff","abs","colDiff","isPathClearForBot","rowDirection","colDirection","currentRow","currentCol","updatePlayerPoints","isWin","gameType","pointsEarned","put","log","fetchLeaderboard","updatedUser","games_played","wins","handleMove","newGameState","nextPlayer","isGameOver","winner","isPlayerWin","gameId","winnerId","setTimeout","botMove","botBoard","isBotGameOver","startGame","Date","now","userId","sendGameRequest","friendId","fromUsername","acceptGameRequest","requestId","req","rejectGameRequest","fetchFriends","searchUsers","dummyUsers","toLowerCase","addFriend","_error$response","_error$response$data","fallbackData","find","p","sort","a","b","updateProfile","updatedProfile","_error$response2","_error$response2$data","logout","removeItem","renderLogin","className","children","onSubmit","type","placeholder","value","onChange","target","required","onClick","renderRegister","renderNavigation","renderGameRequests","renderDashboard","renderPlay","renderGame","onMove","renderFriends","friend","renderTutorial","renderProfile","renderLeaderboard","style","marginBottom","player","index"],"sources":["C:/xampp/htdocs/catur-indonesia/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessBoard from './components/ChessBoard';\r\nimport './App.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'https://catur-backend-1.vercel.app/';\r\nconst socket = io(API_URL);\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState('login');\r\n  const [loginData, setLoginData] = useState({ username: '', password: '' });\r\n  const [registerData, setRegisterData] = useState({ username: '', email: '', password: '', role: 'user' });\r\n  const [gameState, setGameState] = useState(null);\r\n  const [friends, setFriends] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [profile, setProfile] = useState({ username: '', email: '', points: 0 });\r\n  const [currentPlayer, setCurrentPlayer] = useState('white');\r\n  const [isPlayerTurn, setIsPlayerTurn] = useState(true);\r\n  const [gameRequests, setGameRequests] = useState([]);\r\n  const [gameResult, setGameResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchUserProfile();\r\n    }\r\n\r\n    // Socket listeners\r\n    socket.on('gameRequest', (request) => {\r\n      setGameRequests(prev => [...prev, request]);\r\n    });\r\n\r\n    socket.on('gameStarted', (game) => {\r\n      setGameState(game);\r\n      setCurrentPage('game');\r\n      setCurrentPlayer('white');\r\n      setIsPlayerTurn(game.playerColor === 'white');\r\n      setGameResult(null);\r\n    });\r\n\r\n    socket.on('moveMade', (moveData) => {\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        board: moveData.board,\r\n        currentPlayer: moveData.currentPlayer\r\n      }));\r\n      setCurrentPlayer(moveData.currentPlayer);\r\n      setIsPlayerTurn(moveData.currentPlayer === gameState?.playerColor);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameRequest');\r\n      socket.off('gameStarted');\r\n      socket.off('moveMade');\r\n    };\r\n  }, [gameState?.playerColor]);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${API_URL}/api/profile`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setUser(response.data);\r\n      setProfile(response.data);\r\n      setCurrentPage('dashboard');\r\n    } catch (error) {\r\n      console.error('Error fetching profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/login`, loginData);\r\n      localStorage.setItem('token', response.data.token);\r\n      setUser(response.data.user);\r\n      socket.emit('userConnected', response.data.user.id);\r\n      setCurrentPage('dashboard');\r\n    } catch (error) {\r\n      alert('Login gagal: ' + error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`${API_URL}/api/register`, registerData);\r\n      alert('Registrasi berhasil! Silakan login.');\r\n      setCurrentPage('login');\r\n    } catch (error) {\r\n      alert('Registrasi gagal: ' + error.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mengecek skakmat\r\n  const isCheckmate = (board, playerColor) => {\r\n    const kingPiece = playerColor === 'white' ? '♔' : '♚';\r\n    let kingPosition = null;\r\n\r\n    // Cari posisi raja\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        if (board[row][col] === kingPiece) {\r\n          kingPosition = [row, col];\r\n          break;\r\n        }\r\n      }\r\n      if (kingPosition) break;\r\n    }\r\n\r\n    if (!kingPosition) return true; // Raja sudah tidak ada\r\n\r\n    // Cek apakah raja dalam skak\r\n    const isInCheck = isKingInCheck(board, kingPosition, playerColor);\r\n    \r\n    if (!isInCheck) return false; // Bukan skakmat jika raja tidak dalam skak\r\n\r\n    // Cek apakah ada gerakan yang bisa menyelamatkan raja\r\n    const pieces = playerColor === 'white' ? ['♙', '♖', '♘', '♗', '♕', '♔'] : ['♟', '♜', '♞', '♝', '♛', '♚'];\r\n    \r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = board[row][col];\r\n        if (pieces.includes(piece)) {\r\n          const possibleMoves = getPossibleMovesForPiece(board, row, col, piece);\r\n          for (const move of possibleMoves) {\r\n            // Simulasikan gerakan\r\n            const newBoard = board.map(r => [...r]);\r\n            newBoard[move[0]][move[1]] = newBoard[row][col];\r\n            newBoard[row][col] = null;\r\n            \r\n            // Cari posisi raja setelah gerakan\r\n            let newKingPosition = kingPosition;\r\n            if (piece === kingPiece) {\r\n              newKingPosition = move;\r\n            }\r\n            \r\n            // Cek apakah raja masih dalam skak setelah gerakan\r\n            if (!isKingInCheck(newBoard, newKingPosition, playerColor)) {\r\n              return false; // Ada gerakan yang bisa menyelamatkan\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return true; // Skakmat\r\n  };\r\n\r\n  // Fungsi untuk mengecek apakah raja dalam skak\r\n  const isKingInCheck = (board, kingPosition, playerColor) => {\r\n    const opponentColor = playerColor === 'white' ? 'black' : 'white';\r\n    const opponentPieces = opponentColor === 'white' ? ['♙', '♖', '♘', '♗', '♕', '♔'] : ['♟', '♜', '♞', '♝', '♛', '♚'];\r\n    \r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = board[row][col];\r\n        if (opponentPieces.includes(piece)) {\r\n          if (isValidMoveForBot(board, row, col, kingPosition[0], kingPosition[1], piece)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Bot AI logic (diperbaiki)\r\n  const makeBotMove = (board, currentPlayerColor) => {\r\n    const botColor = currentPlayerColor === 'white' ? 'white' : 'black';\r\n    const possibleMoves = getAllPossibleMoves(board, botColor);\r\n    \r\n    if (possibleMoves.length === 0) return null;\r\n    \r\n    // AI sederhana: prioritaskan memakan buah lawan\r\n    const captureMoves = possibleMoves.filter(move => board[move.to[0]][move.to[1]] !== null);\r\n    const selectedMoves = captureMoves.length > 0 ? captureMoves : possibleMoves;\r\n    \r\n    const randomMove = selectedMoves[Math.floor(Math.random() * selectedMoves.length)];\r\n    return randomMove;\r\n  };\r\n\r\n  const getAllPossibleMoves = (board, color) => {\r\n    const moves = [];\r\n    const pieces = color === 'white' ? ['♙', '♖', '♘', '♗', '♕', '♔'] : ['♟', '♜', '♞', '♝', '♛', '♚'];\r\n    \r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = board[row][col];\r\n        if (pieces.includes(piece)) {\r\n          const pieceMoves = getPossibleMovesForPiece(board, row, col, piece);\r\n          moves.push(...pieceMoves.map(move => ({\r\n            from: [row, col],\r\n            to: move,\r\n            piece\r\n          })));\r\n        }\r\n      }\r\n    }\r\n    return moves;\r\n  };\r\n\r\n  const getPossibleMovesForPiece = (board, row, col, piece) => {\r\n    const moves = [];\r\n    for (let r = 0; r < 8; r++) {\r\n      for (let c = 0; c < 8; c++) {\r\n        if (isValidMoveForBot(board, row, col, r, c, piece)) {\r\n          moves.push([r, c]);\r\n        }\r\n      }\r\n    }\r\n    return moves;\r\n  };\r\n\r\n  const getPieceColor = (piece) => {\r\n    const whitePieces = ['♙', '♖', '♘', '♗', '♕', '♔'];\r\n    const blackPieces = ['♟', '♜', '♞', '♝', '♛', '♚'];\r\n    \r\n    if (whitePieces.includes(piece)) return 'white';\r\n    if (blackPieces.includes(piece)) return 'black';\r\n    return null;\r\n  };\r\n\r\n  const isValidMoveForBot = (board, fromRow, fromCol, toRow, toCol, piece) => {\r\n    // Pastikan tidak keluar dari papan\r\n    if (toRow < 0 || toRow > 7 || toCol < 0 || toCol > 7) return false;\r\n    \r\n    // Tidak bisa memakan buah sendiri\r\n    const targetPiece = board[toRow][toCol];\r\n    if (targetPiece && getPieceColor(piece) === getPieceColor(targetPiece)) {\r\n      return false;\r\n    }\r\n\r\n    const rowDiff = Math.abs(toRow - fromRow);\r\n    const colDiff = Math.abs(toCol - fromCol);\r\n\r\n    switch (piece) {\r\n      case '♙': // Pion putih\r\n        if (fromRow === 6 && toRow === 4 && fromCol === toCol && !board[5][toCol] && !board[4][toCol]) return true;\r\n        if (toRow === fromRow - 1 && fromCol === toCol && !targetPiece) return true;\r\n        if (toRow === fromRow - 1 && Math.abs(toCol - fromCol) === 1 && targetPiece) return true;\r\n        return false;\r\n      \r\n      case '♟': // Pion hitam\r\n        if (fromRow === 1 && toRow === 3 && fromCol === toCol && !board[2][toCol] && !board[3][toCol]) return true;\r\n        if (toRow === fromRow + 1 && fromCol === toCol && !targetPiece) return true;\r\n        if (toRow === fromRow + 1 && Math.abs(toCol - fromCol) === 1 && targetPiece) return true;\r\n        return false;\r\n      \r\n      case '♖':\r\n      case '♜': // Benteng\r\n        if (fromRow !== toRow && fromCol !== toCol) return false;\r\n        return isPathClearForBot(board, fromRow, fromCol, toRow, toCol);\r\n      \r\n      case '♗':\r\n      case '♝': // Gajah\r\n        if (rowDiff !== colDiff) return false;\r\n        return isPathClearForBot(board, fromRow, fromCol, toRow, toCol);\r\n      \r\n      case '♘':\r\n      case '♞': // Kuda\r\n        return (rowDiff === 2 && colDiff === 1) || (rowDiff === 1 && colDiff === 2);\r\n      \r\n      case '♕':\r\n      case '♛': // Ratu\r\n        if (fromRow !== toRow && fromCol !== toCol && rowDiff !== colDiff) return false;\r\n        return isPathClearForBot(board, fromRow, fromCol, toRow, toCol);\r\n      \r\n      case '♔':\r\n      case '♚': // Raja\r\n        return rowDiff <= 1 && colDiff <= 1;\r\n      \r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const isPathClearForBot = (board, fromRow, fromCol, toRow, toCol) => {\r\n    const rowDirection = toRow > fromRow ? 1 : toRow < fromRow ? -1 : 0;\r\n    const colDirection = toCol > fromCol ? 1 : toCol < fromCol ? -1 : 0;\r\n    \r\n    let currentRow = fromRow + rowDirection;\r\n    let currentCol = fromCol + colDirection;\r\n    \r\n    while (currentRow !== toRow || currentCol !== toCol) {\r\n      if (board[currentRow][currentCol] !== null) return false;\r\n      currentRow += rowDirection;\r\n      currentCol += colDirection;\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  // Fungsi untuk update poin dan leaderboard (DIPERBAIKI)\r\n  const updatePlayerPoints = async (isWin, gameType) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      let pointsEarned = 0;\r\n      \r\n      if (isWin) {\r\n        pointsEarned = gameType === 'bot' ? 50 : 100;\r\n      }\r\n      \r\n      const response = await axios.put(`${API_URL}/api/user/points`, {\r\n        points: pointsEarned,\r\n        gameType: gameType,\r\n        isWin: isWin\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      // Update state user dengan data terbaru dari server\r\n      setUser(response.data.user);\r\n      setProfile(response.data.user);\r\n      \r\n      console.log('Poin berhasil diupdate:', response.data.user);\r\n      \r\n      // Refresh leaderboard setelah update poin\r\n      await fetchLeaderboard();\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating points:', error);\r\n      // Fallback: update lokal jika API gagal\r\n      const pointsEarned = isWin ? (gameType === 'bot' ? 50 : 100) : 0;\r\n      const updatedUser = { \r\n        ...user, \r\n        points: (user.points || 0) + pointsEarned,\r\n        games_played: (user.games_played || 0) + 1,\r\n        wins: isWin ? (user.wins || 0) + 1 : (user.wins || 0)\r\n      };\r\n      setUser(updatedUser);\r\n      setProfile(updatedUser);\r\n    }\r\n  };\r\n\r\n  const handleMove = async (moveData) => {\r\n    const newGameState = {\r\n      ...gameState,\r\n      board: moveData.board,\r\n      currentPlayer: currentPlayer === 'white' ? 'black' : 'white'\r\n    };\r\n\r\n    setGameState(newGameState);\r\n    \r\n    // Cek skakmat setelah gerakan\r\n    const nextPlayer = newGameState.currentPlayer;\r\n    const isGameOver = isCheckmate(moveData.board, nextPlayer);\r\n    \r\n    if (isGameOver) {\r\n      const winner = currentPlayer;\r\n      const isPlayerWin = winner === gameState.playerColor;\r\n      \r\n      setGameResult({\r\n        winner,\r\n        isPlayerWin,\r\n        message: isPlayerWin ? 'Selamat! Anda menang!' : 'Anda kalah!'\r\n      });\r\n      \r\n      // Update poin setelah game selesai\r\n      await updatePlayerPoints(isPlayerWin, gameState.gameType);\r\n      \r\n      // Simpan hasil game ke database jika bukan vs bot\r\n      if (gameState.gameType !== 'bot') {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          await axios.post(`${API_URL}/api/game/finish`, {\r\n            gameId: gameState.id,\r\n            winnerId: isPlayerWin ? user.id : null,\r\n            gameType: gameState.gameType\r\n          }, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n        } catch (error) {\r\n          console.error('Error finishing game:', error);\r\n        }\r\n      }\r\n      \r\n      return;\r\n    }\r\n\r\n    setCurrentPlayer(newGameState.currentPlayer);\r\n\r\n    // Jika vs bot dan bukan giliran pemain\r\n    if (gameState.gameType === 'bot' && newGameState.currentPlayer !== gameState.playerColor) {\r\n      setIsPlayerTurn(false);\r\n      \r\n      // Bot bergerak setelah delay\r\n      setTimeout(async () => {\r\n        const botMove = makeBotMove(moveData.board, newGameState.currentPlayer);\r\n        if (botMove) {\r\n          const botBoard = [...moveData.board];\r\n          botBoard[botMove.to[0]][botMove.to[1]] = botBoard[botMove.from[0]][botMove.from[1]];\r\n          botBoard[botMove.from[0]][botMove.from[1]] = null;\r\n          \r\n          // Cek skakmat setelah gerakan bot\r\n          const isBotGameOver = isCheckmate(botBoard, gameState.playerColor);\r\n          \r\n          if (isBotGameOver) {\r\n            setGameResult({\r\n              winner: newGameState.currentPlayer,\r\n              isPlayerWin: false,\r\n              message: 'Bot menang! Coba lagi!'\r\n            });\r\n            setGameState(prev => ({ ...prev, board: botBoard }));\r\n            \r\n            // Update poin untuk kekalahan\r\n            await updatePlayerPoints(false, gameState.gameType);\r\n            return;\r\n          }\r\n          \r\n          setGameState(prev => ({\r\n            ...prev,\r\n            board: botBoard,\r\n            currentPlayer: gameState.playerColor\r\n          }));\r\n          setCurrentPlayer(gameState.playerColor);\r\n          setIsPlayerTurn(true);\r\n        }\r\n      }, 1000);\r\n    } else if (gameState.gameType !== 'bot') {\r\n      // Kirim gerakan ke socket untuk multiplayer\r\n      socket.emit('makeMove', {\r\n        gameId: gameState.id,\r\n        move: moveData\r\n      });\r\n    } else {\r\n      setIsPlayerTurn(true);\r\n    }\r\n  };\r\n\r\n  const startGame = async (gameType) => {\r\n    if (gameType === 'bot') {\r\n      // Langsung mulai game vs bot\r\n      const newGameState = {\r\n        id: Date.now(),\r\n        gameType: 'bot',\r\n        playerColor: 'white',\r\n        board: [\r\n          ['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'],\r\n          ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'],\r\n          [null, null, null, null, null, null, null, null],\r\n          [null, null, null, null, null, null, null, null],\r\n          [null, null, null, null, null, null, null, null],\r\n          [null, null, null, null, null, null, null, null],\r\n          ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'],\r\n          ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖']\r\n        ]\r\n      };\r\n      setGameState(newGameState);\r\n      setCurrentPlayer('white');\r\n      setIsPlayerTurn(true);\r\n      setGameResult(null);\r\n      setCurrentPage('game');\r\n    } else {\r\n      // Untuk random dan friend, kirim request\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        socket.emit('findGame', { gameType, userId: user.id, token });\r\n        alert(`Mencari ${gameType === 'random' ? 'lawan random' : 'teman'}...`);\r\n      } catch (error) {\r\n        alert('Gagal memulai permainan: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendGameRequest = (friendId) => {\r\n    socket.emit('gameRequest', {\r\n      from: user.id,\r\n      to: friendId,\r\n      fromUsername: user.username\r\n    });\r\n    alert('Permintaan permainan dikirim!');\r\n  };\r\n\r\n  const acceptGameRequest = (requestId) => {\r\n    socket.emit('acceptGameRequest', requestId);\r\n    setGameRequests(prev => prev.filter(req => req.id !== requestId));\r\n  };\r\n\r\n  const rejectGameRequest = (requestId) => {\r\n    socket.emit('rejectGameRequest', requestId);\r\n    setGameRequests(prev => prev.filter(req => req.id !== requestId));\r\n  };\r\n\r\n  const fetchFriends = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${API_URL}/api/friends`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setFriends(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching friends:', error);\r\n      // Fallback: tampilkan data dummy jika API tidak tersedia\r\n      setFriends([\r\n        { id: 1, username: 'player1', points: 1500 },\r\n        { id: 2, username: 'player2', points: 1200 },\r\n        { id: 3, username: 'player3', points: 1800 }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const searchUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${API_URL}/api/users/search?q=${searchTerm}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setAllUsers(response.data);\r\n    } catch (error) {\r\n      console.error('Error searching users:', error);\r\n      // Fallback: tampilkan data dummy\r\n      const dummyUsers = [\r\n        { id: 4, username: 'chessmaster', points: 2000 },\r\n        { id: 5, username: 'rookie123', points: 800 },\r\n        { id: 6, username: 'grandmaster', points: 2500 }\r\n      ].filter(user => user.username.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      setAllUsers(dummyUsers);\r\n    }\r\n  };\r\n\r\n  const addFriend = async (userId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`${API_URL}/api/friends/add`, \r\n        { friendId: userId }, \r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      alert('Teman berhasil ditambahkan!');\r\n      fetchFriends();\r\n    } catch (error) {\r\n      alert('Gagal menambahkan teman: ' + error.response?.data?.message || error.message);\r\n    }\r\n  };\r\n\r\n  const fetchLeaderboard = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/leaderboard`);\r\n      setLeaderboard(response.data);\r\n      console.log('Leaderboard updated:', response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching leaderboard:', error);\r\n      // Fallback data dengan user terkini\r\n      const fallbackData = [\r\n        { id: 1, username: 'grandmaster', points: 2500 },\r\n        { id: 2, username: 'chessking', points: 2200 },\r\n        { id: 3, username: 'strategymaster', points: 2000 },\r\n        { id: 4, username: 'player1', points: 1800 },\r\n        { id: 5, username: 'rookie123', points: 1500 }\r\n      ];\r\n      \r\n      // Tambahkan user saat ini jika belum ada\r\n      if (user && !fallbackData.find(p => p.username === user.username)) {\r\n        fallbackData.push({\r\n          id: user.id,\r\n          username: user.username,\r\n          points: user.points || 0,\r\n          games_played: user.games_played || 0,\r\n          wins: user.wins || 0\r\n        });\r\n      }\r\n      \r\n      // Sort berdasarkan poin\r\n      fallbackData.sort((a, b) => b.points - a.points);\r\n      setLeaderboard(fallbackData);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.put(`${API_URL}/api/profile`, updatedProfile, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setProfile(response.data.user);\r\n      setUser(response.data.user);\r\n      alert('Profil berhasil diperbarui!');\r\n    } catch (error) {\r\n      alert('Gagal memperbarui profil: ' + error.response?.data?.message || error.message);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    socket.emit('userDisconnected', user?.id);\r\n    setUser(null);\r\n    setCurrentPage('login');\r\n  };\r\n\r\n  const renderLogin = () => (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>🇮🇩 Catur Indonesia - Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={loginData.username}\r\n            onChange={(e) => setLoginData({...loginData, username: e.target.value})}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={loginData.password}\r\n            onChange={(e) => setLoginData({...loginData, password: e.target.value})}\r\n            required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        <p>Belum punya akun? <button onClick={() => setCurrentPage('register')}>Daftar</button></p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderRegister = () => (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>🇮🇩 Catur Indonesia - Daftar</h2>\r\n        <form onSubmit={handleRegister}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={registerData.username}\r\n            onChange={(e) => setRegisterData({...registerData, username: e.target.value})}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={registerData.email}\r\n            onChange={(e) => setRegisterData({...registerData, email: e.target.value})}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={registerData.password}\r\n            onChange={(e) => setRegisterData({...registerData, password: e.target.value})}\r\n            required\r\n          />\r\n          <select\r\n            value={registerData.role}\r\n            onChange={(e) => setRegisterData({...registerData, role: e.target.value})}\r\n          >\r\n            <option value=\"user\">User</option>\r\n            <option value=\"admin\">Admin</option>\r\n          </select>\r\n          <button type=\"submit\">Daftar</button>\r\n        </form>\r\n        <p>Sudah punya akun? <button onClick={() => setCurrentPage('login')}>Login</button></p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderNavigation = () => (\r\n    <nav className=\"navigation\">\r\n      <div className=\"nav-brand\">🇮🇩 Catur Indonesia</div>\r\n      <div className=\"nav-links\">\r\n        <button onClick={() => setCurrentPage('dashboard')}>Dashboard</button>\r\n        <button onClick={() => setCurrentPage('play')}>Main</button>\r\n        <button onClick={() => { setCurrentPage('friends'); fetchFriends(); }}>Teman</button>\r\n        <button onClick={() => setCurrentPage('tutorial')}>Tutorial</button>\r\n        <button onClick={() => setCurrentPage('profile')}>Profil</button>\r\n        <button onClick={() => { setCurrentPage('leaderboard'); fetchLeaderboard(); }}>Papan Skor</button>\r\n        <button onClick={logout}>Keluar</button>\r\n      </div>\r\n      <div className=\"user-info\">\r\n        Halo, {user?.username}! (Poin: {user?.points || 0})\r\n        {gameRequests.length > 0 && (\r\n          <span className=\"notification-badge\">{gameRequests.length}</span>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n\r\n  const renderGameRequests = () => {\r\n    if (gameRequests.length === 0) return null;\r\n    \r\n    return (\r\n      <div className=\"game-requests\">\r\n        <h3>Permintaan Permainan</h3>\r\n        {gameRequests.map(request => (\r\n          <div key={request.id} className=\"game-request\">\r\n            <p>{request.fromUsername} mengundang Anda bermain catur</p>\r\n            <button onClick={() => acceptGameRequest(request.id)}>Terima</button>\r\n            <button onClick={() => rejectGameRequest(request.id)}>Tolak</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDashboard = () => (\r\n    <div className=\"dashboard\">\r\n      <h1>Selamat Datang di Catur Indonesia! 🇮🇩</h1>\r\n      {renderGameRequests()}\r\n      <div className=\"welcome-card\">\r\n        <h2>Halo, {user?.username}!</h2>\r\n        <p>Selamat datang di platform catur terbesar Indonesia. Mari mulai permainan yang menantang!</p>\r\n        <div className=\"stats\">\r\n          <div className=\"stat-item\">\r\n            <h3>Poin Anda</h3>\r\n            <p>{user?.points || 0}</p>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <h3>Permainan Dimainkan</h3>\r\n            <p>{user?.games_played || 0}</p>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <h3>Kemenangan</h3>\r\n            <p>{user?.wins || 0}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPlay = () => (\r\n    <div className=\"play-section\">\r\n      <h1>Pilih Mode Permainan</h1>\r\n      <div className=\"game-modes\">\r\n        <div className=\"game-mode-card\" onClick={() => startGame('random')}>\r\n          <h3>🎲 Lawan Random</h3>\r\n          <p>Bermain melawan pemain acak</p>\r\n        </div>\r\n        <div className=\"game-mode-card\" onClick={() => startGame('bot')}>\r\n          <h3>🤖 Lawan Bot</h3>\r\n          <p>Berlatih melawan komputer</p>\r\n        </div>\r\n        <div className=\"game-mode-card\" onClick={() => startGame('friend')}>\r\n          <h3>👥 Undang Teman</h3>\r\n          <p>Bermain dengan teman</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderGame = () => (\r\n    <div className=\"game-container\">\r\n      <h2>Permainan Catur</h2>\r\n      {gameResult && (\r\n        <div className={`game-result ${gameResult.isPlayerWin ? 'win' : 'lose'}`}>\r\n          <h3>{gameResult.message}</h3>\r\n          {gameResult.isPlayerWin && <p>+{gameState.gameType === 'bot' ? 50 : 100} poin!</p>}\r\n          <button onClick={() => setCurrentPage('dashboard')}>Kembali ke Dashboard</button>\r\n          <button onClick={() => startGame(gameState.gameType)}>Main Lagi</button>\r\n        </div>\r\n      )}\r\n      <ChessBoard \r\n        gameState={gameState} \r\n        onMove={handleMove}\r\n        currentPlayer={currentPlayer}\r\n        isPlayerTurn={isPlayerTurn}\r\n        gameResult={gameResult}\r\n      />\r\n      <button onClick={() => setCurrentPage('dashboard')}>Kembali ke Dashboard</button>\r\n    </div>\r\n  );\r\n\r\n  const renderFriends = () => (\r\n    <div className=\"friends-section\">\r\n      <h1>Daftar Teman</h1>\r\n      \r\n      {/* Search Section */}\r\n      <div className=\"search-section\">\r\n        <h3>Cari Pengguna Baru</h3>\r\n        <div className=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Masukkan username...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button onClick={searchUsers}>Cari</button>\r\n        </div>\r\n        \r\n        {allUsers.length > 0 && (\r\n          <div className=\"search-results\">\r\n            <h4>Hasil Pencarian:</h4>\r\n            {allUsers.map(user => (\r\n              <div key={user.id} className=\"user-card\">\r\n                <h3>{user.username}</h3>\r\n                <p>Poin: {user.points}</p>\r\n                <button onClick={() => addFriend(user.id)}>Tambah Teman</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Friends List */}\r\n      <div className=\"friends-list\">\r\n        <h3>Teman Anda</h3>\r\n        {friends.length === 0 ? (\r\n          <p>Anda belum memiliki teman. Cari dan tambahkan teman baru!</p>\r\n        ) : (\r\n          friends.map(friend => (\r\n            <div key={friend.id} className=\"friend-card\">\r\n              <h3>{friend.username}</h3>\r\n              <p>Poin: {friend.points}</p>\r\n              <button onClick={() => sendGameRequest(friend.id)}>Undang Main</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderTutorial = () => (\r\n    <div className=\"tutorial-section\">\r\n      <h1>Tutorial Catur Indonesia</h1>\r\n      <div className=\"tutorial-content\">\r\n        <h2>Cara Bermain Catur</h2>\r\n        <p>Catur adalah permainan strategi untuk dua pemain yang dimainkan di atas papan berpetak 8x8.</p>\r\n        \r\n        <h3>Peraturan Dasar:</h3>\r\n        <ul>\r\n          <li>Setiap pemain memulai dengan 16 buah catur</li>\r\n          <li>Tujuan: mengalahkan raja lawan (skakmat)</li>\r\n          <li>Pemain dengan buah putih bergerak terlebih dahulu</li>\r\n          <li>Setiap buah memiliki cara bergerak yang berbeda</li>\r\n        </ul>\r\n\r\n        <h3>Gerakan Buah Catur:</h3>\r\n        <ul>\r\n          <li><strong>Raja (♔/♚):</strong> Bergerak satu kotak ke segala arah</li>\r\n          <li><strong>Ratu (♕/♛):</strong> Bergerak bebas horizontal, vertikal, dan diagonal</li>\r\n          <li><strong>Benteng (♖/♜):</strong> Bergerak horizontal dan vertikal</li>\r\n          <li><strong>Gajah (♗/♝):</strong> Bergerak diagonal</li>\r\n          <li><strong>Kuda (♘/♞):</strong> Bergerak berbentuk L</li>\r\n          <li><strong>Pion (♙/♟):</strong> Bergerak maju satu kotak, memakan diagonal</li>\r\n        </ul>\r\n\r\n        <h3>Gerakan Khusus:</h3>\r\n        <ul>\r\n          <li><strong>Rokade:</strong> Gerakan khusus raja dan benteng</li>\r\n          <li><strong>En Passant:</strong> Cara khusus pion memakan pion lawan</li>\r\n          <li><strong>Promosi Pion:</strong> Pion yang mencapai ujung papan dapat dipromosikan</li>\r\n        </ul>\r\n\r\n        <h3>Sistem Poin:</h3>\r\n        <ul>\r\n          <li>Menang vs Bot: +50 poin</li>\r\n          <li>Menang vs Pemain: +100 poin</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderProfile = () => (\r\n    <div className=\"profile-section\">\r\n      <h1>Profil Pengguna</h1>\r\n      <div className=\"profile-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={profile.username}\r\n          onChange={(e) => setProfile({...profile, username: e.target.value})}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={profile.email}\r\n          onChange={(e) => setProfile({...profile, email: e.target.value})}\r\n        />\r\n        <p>Poin: {profile.points}</p>\r\n        <p>Permainan Dimainkan: {profile.games_played || 0}</p>\r\n        <p>Kemenangan: {profile.wins || 0}</p>\r\n        <button onClick={() => updateProfile(profile)}>Perbarui Profil</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderLeaderboard = () => (\r\n    <div className=\"leaderboard-section\">\r\n      <h1>Papan Skor</h1>\r\n      <button onClick={fetchLeaderboard} style={{marginBottom: '20px'}}>\r\n        🔄 Refresh Leaderboard\r\n      </button>\r\n      <div className=\"leaderboard-list\">\r\n        {leaderboard.map((player, index) => (\r\n          <div key={player.id} className={`leaderboard-item ${player.username === user?.username ? 'current-user' : ''}`}>\r\n            <span className=\"rank\">#{index + 1}</span>\r\n            <span className=\"username\">{player.username}</span>\r\n            <span className=\"points\">{player.points} poin</span>\r\n            <span className=\"stats\">\r\n              ({player.games_played || 0} games, {player.wins || 0} wins)\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"App\">\r\n        {currentPage === 'login' && renderLogin()}\r\n        {currentPage === 'register' && renderRegister()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderNavigation()}\r\n      <main className=\"main-content\">\r\n        {currentPage === 'dashboard' && renderDashboard()}\r\n        {currentPage === 'play' && renderPlay()}\r\n        {currentPage === 'game' && renderGame()}\r\n        {currentPage === 'friends' && renderFriends()}\r\n        {currentPage === 'tutorial' && renderTutorial()}\r\n        {currentPage === 'profile' && renderProfile()}\r\n        {currentPage === 'leaderboard' && renderLeaderboard()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}