{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\catur-indonesia\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  gameState\n}) => {\n  _s();\n  const [selectedSquare, setSelectedSquare] = useState(null);\n\n  // Inisialisasi papan catur 8x8\n  const initialBoard = [['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'], ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'], ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖']];\n  const [board, setBoard] = useState(initialBoard);\n  const [currentPlayer, setCurrentPlayer] = useState('white');\n  const handleSquareClick = (row, col) => {\n    if (selectedSquare) {\n      // Pindahkan buah catur\n      const newBoard = [...board];\n      const [selectedRow, selectedCol] = selectedSquare;\n      newBoard[row][col] = newBoard[selectedRow][selectedCol];\n      newBoard[selectedRow][selectedCol] = null;\n      setBoard(newBoard);\n      setSelectedSquare(null);\n      setCurrentPlayer(currentPlayer === 'white' ? 'black' : 'white');\n    } else if (board[row][col]) {\n      // Pilih buah catur\n      setSelectedSquare([row, col]);\n    }\n  };\n  const getSquareColor = (row, col) => {\n    const isLight = (row + col) % 2 === 0;\n    const isSelected = selectedSquare && selectedSquare[0] === row && selectedSquare[1] === col;\n    if (isSelected) return 'bg-yellow-400';\n    return isLight ? 'bg-amber-100' : 'bg-amber-600';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Giliran: \", currentPlayer === 'white' ? 'Putih' : 'Hitam']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chess-board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chess-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chess-square ${getSquareColor(rowIndex, colIndex)}`,\n          onClick: () => handleSquareClick(rowIndex, colIndex),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chess-piece\",\n            children: piece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"w2wA2RqKvYOEKodsIECIWhz4wLo=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChessBoard","gameState","_s","selectedSquare","setSelectedSquare","initialBoard","board","setBoard","currentPlayer","setCurrentPlayer","handleSquareClick","row","col","newBoard","selectedRow","selectedCol","getSquareColor","isLight","isSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","piece","colIndex","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/catur-indonesia/frontend/src/components/ChessBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ChessBoard = ({ gameState }) => {\r\n  const [selectedSquare, setSelectedSquare] = useState(null);\r\n  \r\n  // Inisialisasi papan catur 8x8\r\n  const initialBoard = [\r\n    ['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'],\r\n    ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'],\r\n    ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖']\r\n  ];\r\n\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [currentPlayer, setCurrentPlayer] = useState('white');\r\n\r\n  const handleSquareClick = (row, col) => {\r\n    if (selectedSquare) {\r\n      // Pindahkan buah catur\r\n      const newBoard = [...board];\r\n      const [selectedRow, selectedCol] = selectedSquare;\r\n      newBoard[row][col] = newBoard[selectedRow][selectedCol];\r\n      newBoard[selectedRow][selectedCol] = null;\r\n      setBoard(newBoard);\r\n      setSelectedSquare(null);\r\n      setCurrentPlayer(currentPlayer === 'white' ? 'black' : 'white');\r\n    } else if (board[row][col]) {\r\n      // Pilih buah catur\r\n      setSelectedSquare([row, col]);\r\n    }\r\n  };\r\n\r\n  const getSquareColor = (row, col) => {\r\n    const isLight = (row + col) % 2 === 0;\r\n    const isSelected = selectedSquare && selectedSquare[0] === row && selectedSquare[1] === col;\r\n    \r\n    if (isSelected) return 'bg-yellow-400';\r\n    return isLight ? 'bg-amber-100' : 'bg-amber-600';\r\n  };\r\n\r\n  return (\r\n    <div className=\"chess-board-container\">\r\n      <div className=\"game-info\">\r\n        <h3>Giliran: {currentPlayer === 'white' ? 'Putih' : 'Hitam'}</h3>\r\n      </div>\r\n      <div className=\"chess-board\">\r\n        {board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"chess-row\">\r\n            {row.map((piece, colIndex) => (\r\n              <div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`chess-square ${getSquareColor(rowIndex, colIndex)}`}\r\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n              >\r\n                <span className=\"chess-piece\">{piece}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}